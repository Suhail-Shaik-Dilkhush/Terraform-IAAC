---
name: Terraform Actions
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
env:
  AWS_REGION: eu-north-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  EKS_CLUSTER: vprofile-cluster

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3

      - name: Printing bucket name
        run: echo "Bucket name ':' ${{ env.BUCKET_TF_STATE }}"

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

      - name: Terraform format
        id: format
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile.tfplan
        continue-on-error: true

      - name: Terraform Plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      #test
      - name: Terraform Apply
        id: Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve -no-color -input=false -parallelism=1 planfile.tfplan

      - name: Aws Configure Creds
        if: steps.Apply.outcome == 'success'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kube Config File
        id: getconfig
        if: steps.Apply.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      - name: save the kube config file to s3
        if: steps.getconfig.outcome == 'success'
        run: aws s3 cp /home/runner/.kube/config s3://${{ env.BUCKET_TF_STATE }}/kubeconfig --region ${{ env.AWS_REGION }}

      - name: running manual command to test kubectl
        if: steps.getconfig.outcome == 'success'
        run: |
          aws sts get-caller-identity

      - name: Install Ingress Controller
        id: install_ingress
        if: steps.Apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml --validate=false
